openapi: 3.0.1

info:
  title: Organisation Service API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing

paths:
  /configurations/contact-reasons:
    get:
      tags:
        - Configuration
      summary: Allows a user to get contact reasons
      description: "Sample request:\r\n            \r\n    GET configurations/contact-reasons"
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
        '401':
          description: Unauthorised
  /configurations/identity-providers:
    get:
      tags:
        - Configuration
      summary: Allows a user to get identity provider details
      description: "Sample request:\r\n            \r\n    GET configurations/identity-providers"
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
        '401':
          description: Unauthorised
  /configurations/roles:
    get:
      tags:
        - Configuration
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
  /organisations:
    post:
      tags:
        - Organisation
      summary: Allows a user to create organisation
      description: "Sample request:\r\n            \r\n    POST /organisations/\r\n    {\r\n      \"Identifier\": {\r\n        \"legalName\": \"Kier Limited\",\r\n        \"uri\": \"http://data.companieshouse.gov.uk/doc/company/1\"\r\n      },\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      },\r\n      \"Detail\": {\r\n        \"organisationId\": \"CiiOrgidId\",\r\n        \"rightToBuy\": \"true\",\r\n        \"is_sme\": 1,\r\n        \"is_vcse\": 1,\r\n        \"active\": 1\r\n      }\r\n    }"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
      responses:
        '200':
          description: Ok. Return created organisation id
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            text/json:
              schema:
                type: string
        '400':
          description: "Bad request.\r\n             Error Codes:  INVALID_IDENTIFIER, INVALID_LEGAL_NAME, INVALID_URI, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
  '/organisations/{organisationId}':
    get:
      tags:
        - Organisation
      summary: Get organisation profile details
      description: "Sample request:\r\n            \r\n    GET /organisations/CiiOrgidId"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationProfileResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationProfileResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationProfileResponseInfo'
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
    put:
      tags:
        - Organisation
      summary: Allows a user to update organisation
      description: "Sample request:\r\n            \r\n    PUT /organisations/CiiOrgidId\r\n    {\r\n      \"Identifier\": {\r\n        \"legalName\": \"Kier Limited\",\r\n        \"uri\": \"http://data.companieshouse.gov.uk/doc/company/1\"\r\n      },\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      },\r\n      \"Detail\": {\r\n        \"organisationId\": \"CiiOrgidId\",\r\n        \"rightToBuy\": \"true\",\r\n        \"is_sme\": 1,\r\n        \"is_vcse\": 1,\r\n        \"active\": 1\r\n      }\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationProfileInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_IDENTIFIER, INVALID_LEGAL_NAME, INVALID_URI, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
  '/organisations/{organisationId}/contacts':
    post:
      tags:
        - Organisation contact
      summary: Allows a user to create organisation contact
      description: "Sample request:\r\n            \r\n    POST /organisations/1/contact\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok. Return created contact id
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_EMAIL, INVALID_PHONE_NUMBER, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    get:
      tags:
        - Organisation contact
      summary: Allows a user to get organisation contact details
      description: "Sample request:\r\n            \r\n    GET organisations/1/contact"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: contactType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfoList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfoList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfoList'
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/contacts/{contactId}':
    get:
      tags:
        - Organisation contact
      summary: Allows a user to retrieve details for a given organisation contact
      description: "Sample request:\r\n            \r\n    GET /organisations/1/contact/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationContactInfo'
        '401':
          description: Unauthorised
        '404':
          description: Not found
    put:
      tags:
        - Organisation contact
      summary: Allows a user to edit organisation contact
      description: "Sample request:\r\n            \r\n    PUT /organisations/1/contact/1\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_EMAIL, INVALID_PHONE_NUMBER, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    delete:
      tags:
        - Organisation contact
      summary: Remove a contact from an organisation
      description: "Sample request:\r\n            \r\n    DELETE /organisations/1/contact/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/sites':
    post:
      tags:
        - Organisation site
      summary: Allows a user to create organisation site
      description: "Sample request:\r\n            \r\n    POST /organisations/1/site\r\n    {\r\n      \"siteName\": \"Main Branch\",\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      }\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
      responses:
        '200':
          description: Ok. Return created site id
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_SITE_NAME, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    get:
      tags:
        - Organisation site
      summary: Allows a user to get all the sites in an organisation
      description: "Sample request:\r\n            \r\n    GET /organisations/1/site"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok with site list
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationSiteInfoList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteInfoList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteInfoList'
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/sites/{siteId}':
    get:
      tags:
        - Organisation site
      summary: Allows a user to get organisation site details
      description: "Sample request:\r\n            \r\n    GET /organisations/1/site/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok with site details
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationSiteResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteResponse'
        '401':
          description: Unauthorised
        '404':
          description: Not found
    put:
      tags:
        - Organisation site
      summary: Allows a user to update organisation site
      description: "Sample request:\r\n            \r\n    PUT /organisations/1/site/1\r\n    {\r\n      \"siteName\": \"Main Branch\",\r\n      \"address\": {\r\n        \"streetAddress\": \"1600 Amphitheatre Pkwy\",\r\n        \"locality\": \"Mountain View.\",\r\n        \"region\": \"CA.\",\r\n        \"postalCode\": \"94043\",\r\n        \"countryCode\": \"UK\"\r\n      }\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationSiteInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_SITE_NAME, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    delete:
      tags:
        - Organisation site
      summary: Allows a user to delete organisation site
      description: "Sample request:\r\n            \r\n    DELETE /organisations/1/site/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/sites/{siteId}/contacts':
    post:
      tags:
        - Organisation site contact
      summary: Allows a user to create organisation site contact
      description: "Sample request:\r\n            \r\n    POST /organisations/1/site/1/contact\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok. Return created site contact id
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_EMAIL, INVALID_PHONE_NUMBER, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    get:
      tags:
        - Organisation site contact
      summary: Allows a user to get list of contacts for organisation site
      description: "Sample request:\r\n            \r\n    GET organisations/1/site/1/contact"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: contactType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfoList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfoList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfoList'
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/sites/{siteId}/contacts/{contactId}':
    get:
      tags:
        - Organisation site contact
      summary: Allows a user to retrieve details for a given organisation site contact
      description: "Sample request:\r\n            \r\n    GET /organisations/1/site/1/contact/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationSiteContactInfo'
        '401':
          description: Unauthorised
        '404':
          description: Not found
    put:
      tags:
        - Organisation site contact
      summary: Allows a user to edit organisation site contact
      description: "Sample request:\r\n            \r\n    PUT /organisations/1/site/1/contact/1\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_EMAIL, INVALID_PHONE_NUMBER, INSUFFICIENT_DETAILS"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    delete:
      tags:
        - Organisation site contact
      summary: Remove a contact from an organisation site
      description: "Sample request:\r\n            \r\n    DELETE /organisations/1/site/1/contact/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: siteId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/user':
    get:
      tags:
        - Organisation User
      summary: Allows a user to retrieve users for a given organisation
      description: "Sample request:\r\n            \r\n    GET /organisations/1?userId=user@mail.com,pageSize=10,currentPage=1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: PageSize
          in: query
          schema:
            type: integer
            format: int32
        - name: CurrentPage
          in: query
          schema:
            type: integer
            format: int32
        - name: searchString
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserListResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
            text/json:
              schema:
                $ref: '#/components/schemas/UserListResponse'
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/organisations/{organisationId}/groups':
    post:
      tags:
        - Organisation Group
      summary: Create organisation group
      description: "Sample request:\r\n            \r\n    POST /organisations/1/groups\r\n    {\r\n      'groupName': \"Group Name\"\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupNameInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupNameInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupNameInfo'
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_GROUP_NAME"
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
        '409':
          description: Resource already exists
    get:
      tags:
        - Organisation Group
      summary: Get organisation groups
      description: "Sample request:\r\n            \r\n    GET /organisations/1/groups"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: searchString
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationGroupList'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationGroupList'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationGroupList'
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
  '/organisations/{organisationId}/groups/{groupId}':
    delete:
      tags:
        - Organisation Group
      summary: Delete organisation group
      description: "Sample request:\r\n            \r\n    DELETE /organisations/1/groups/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
    get:
      tags:
        - Organisation Group
      summary: Get organisation group
      description: "Sample request:\r\n            \r\n    GET /organisations/1/groups/1"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/OrganisationGroupResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/OrganisationGroupResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/OrganisationGroupResponseInfo'
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
    patch:
      tags:
        - Organisation Group
      summary: Update organisation group
      description: "Sample requests:\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo': null,\r\n      'userInfo': null\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"\",\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': null,\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo': null,\r\n      'userInfo':{\r\n          'addedUserIds': [ \"user1@mail.com\", \"user2@mail.com\" ],\r\n          'addedUserIds': [ \"user3@mail.com\" ]\r\n       }\r\n    }\r\n            \r\n    PATCH /organisations/1/groups/1\r\n    {\r\n      'groupName': \"Group Name\",\r\n      'roleInfo':{\r\n          'addedRoleIds': [ 1, 2 ],\r\n          'removedRoleIds': [ 3 ]\r\n       },\r\n      'userInfo': null\r\n    }"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: groupId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupRequestInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupRequestInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationGroupRequestInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_ROLE_INFO, INVALID_USER_INFO"
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
        '409':
          description: Resource already exists
  '/organisations/{organisationId}/identity-providers':
    get:
      tags:
        - Organisation
      summary: Allows a user to get identity provider details of an organisation
      description: "Sample request:\r\n            \r\n    GET organisations/1/identity-providers"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
  '/organisations/{organisationId}/identity-providers/update':
    put:
      tags:
        - Organisation
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
        - name: idpName
          in: query
          schema:
            type: string
            nullable: true
        - name: enabled
          in: query
          schema:
            type: boolean
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
  '/organisations/{organisationId}/roles':
    get:
      tags:
        - Organisation
      summary: Get organisation roles
      description: "Sample request:\r\n            \r\n    GET /organisations/1/roles"
      parameters:
        - name: organisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
        '401':
          description: Unauthorised
        '404':
          description: Resource not found
  '/organisations/{ciiOrganisationId}/eligableRoles':
    get:
      tags:
        - Organisation
      parameters:
        - name: ciiOrganisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
  '/organisations/{ciiOrganisationId}/updateEligableRoles':
    put:
      tags:
        - Organisation
      parameters:
        - name: ciiOrganisationId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganisationRoleUpdate'
          text/json:
            schema:
              $ref: '#/components/schemas/OrganisationRoleUpdate'
          application/*+json:
            schema:
              $ref: '#/components/schemas/OrganisationRoleUpdate'
      responses:
        '200':
          description: Success
  
components:
  schemas:
    ContactReasonInfo:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    IdentityProviderDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        connectionName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    RoleEligibleOrgType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    RoleEligibleSubscriptionType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    RoleEligibleTradeType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    OrganisationRole:
      type: object
      properties:
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
        orgTypeEligibility:
          $ref: '#/components/schemas/RoleEligibleOrgType'
        subscriptionTypeEligibility:
          $ref: '#/components/schemas/RoleEligibleSubscriptionType'
        tradeEligibility:
          $ref: '#/components/schemas/RoleEligibleTradeType'
      additionalProperties: false
    OrganisationIdentifier:
      type: object
      properties:
        id:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        scheme:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationAddress:
      type: object
      properties:
        streetAddress:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationDetail:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        creationDate:
          type: string
          nullable: true
        companyType:
          type: string
          nullable: true
        isSme:
          type: boolean
        isVcse:
          type: boolean
        rightToBuy:
          type: boolean
        isActive:
          type: boolean
      additionalProperties: false
      
    OrganisationProfileInfo:
      $ref: 'https://raw.githubusercontent.com/Crown-Commercial-Service/ccs-api-definitions-common/main/CCS_OCDS_Standards/CCS-OCDS_Schema.yaml#/components/schemas/Organization'
#      type: object
#      properties:
#        identifier:
#          $ref: '#/components/schemas/OrganisationIdentifier'
#        address:
#          $ref: '#/components/schemas/OrganisationAddress'
#        detail:
#          $ref: '#/components/schemas/OrganisationDetail'
#      additionalProperties: false
#    OrganisationProfileResponseInfo:
#      type: object
#      properties:
#        identifier:
#          $ref: '#/components/schemas/OrganisationIdentifier'
#        additionalIdentifiers:
#          type: array
#          items:
#            $ref: '#/components/schemas/OrganisationIdentifier'
#          nullable: true
#        address:
#          $ref: '#/components/schemas/OrganisationAddress'
#        detail:
#          $ref: '#/components/schemas/OrganisationDetail'
#      additionalProperties: false
      
      
    ContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
      additionalProperties: false
    ContactResponseInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
      additionalProperties: false
    OrganisationContactInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        contactsList:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    OrganisationContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationSiteInfo:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
      additionalProperties: false
    SiteDetail:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
      additionalProperties: false
    OrganisationSite:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        details:
          $ref: '#/components/schemas/SiteDetail'
      additionalProperties: false
    OrganisationSiteInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        sites:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationSite'
          nullable: true
      additionalProperties: false
    OrganisationSiteResponse:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        details:
          $ref: '#/components/schemas/SiteDetail'
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationSiteContactInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        siteId:
          type: integer
          format: int32
        siteContacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    OrganisationSiteContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    UserListInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserListResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
        userList:
          type: array
          items:
            $ref: '#/components/schemas/UserListInfo'
          nullable: true
      additionalProperties: false
    OrganisationGroupNameInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        groupId:
          type: integer
          format: int32
        createdDate:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        groupList:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationGroupInfo'
          nullable: true
      additionalProperties: false
    GroupRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    GroupUser:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupResponseInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        groupId:
          type: integer
          format: int32
        createdDate:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/GroupRole'
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/GroupUser'
          nullable: true
      additionalProperties: false
    OrganisationGroupRolePatchInfo:
      type: object
      properties:
        addedRoleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        removedRoleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    OrganisationGroupUserPatchInfo:
      type: object
      properties:
        addedUserIds:
          type: array
          items:
            type: string
          nullable: true
        removedUserIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupRequestInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        roleInfo:
          $ref: '#/components/schemas/OrganisationGroupRolePatchInfo'
        userInfo:
          $ref: '#/components/schemas/OrganisationGroupUserPatchInfo'
      additionalProperties: false
    OrganisationRoleUpdate:
      type: object
      properties:
        isBuyer:
          type: boolean
        rolesToAdd:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationRole'
          nullable: true
        rolesToDelete:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationRole'
          nullable: true
      additionalProperties: false
    UserTitle:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserProfileEditRequestInfo:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        title:
          $ref: '#/components/schemas/UserTitle'
        groupIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        roleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        identityProviderId:
          type: integer
          format: int32
        detail:
          $ref: '#/components/schemas/UserDetail'
      additionalProperties: false
    UserEditResponseInfo:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        isRegisteredInIdam:
          type: boolean
      additionalProperties: false
    GroupAccessRole:
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        accessRole:
          type: string
          nullable: true
        accessRoleName:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
      additionalProperties: false
    UserProfileResponseInfo:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        title:
          $ref: '#/components/schemas/UserTitle'
        groupIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        roleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        identityProviderId:
          type: integer
          format: int32
        detail:
          $ref: '#/components/schemas/UserDetail'
        identityProvider:
          type: string
          nullable: true
        identityProviderDisplayName:
          type: string
          nullable: true
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/GroupAccessRole'
          nullable: true
        canChangePassword:
          type: boolean
        roleNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserContactInfoList:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        contactsList:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    UserContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
      
  securitySchemes:
    ApiKey:
      type: apiKey
      name: X-API-KEY
      in: header
      
# security:
#  - ApiKey: []
  
#    securitySchemes:
#    openID:
#      type: openIdConnect
#      openIdConnectUrl: 'https://accounts.google.com/.well-known/openid-configuration'
#    OAuth2:
#      type: oauth2
#      flows:
#        authorizationCode:
#          authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
#          tokenUrl: 'https://oauth2.googleapis.com/token'
#          scopes:
#            openid: Standard scope
#            email: email
#            profile: profile
#            supplier: Grants access to act as a supplier
#            buyer: Grants access to act as a buyer
#            admin: Grants access to admin operations