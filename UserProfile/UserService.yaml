openapi: 3.0.1

info:
  title: User Service API
  description: Optional multiline or single-line description in [CommonMark](http://commonmark.org/help/) or HTML.
  version: 1.0
servers:
  - url: http://api.example.com/v1
    description: Optional server description, e.g. Main (production) server
  - url: http://staging-api.example.com
    description: Optional server description, e.g. Internal staging server for testing
    
paths:
  /configurations/contact-reasons:
    get:
      tags:
        - Configuration
      summary: Allows a user to get contact reasons
      description: "Sample request:\r\n            \r\n    GET configurations/contact-reasons"
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ContactReasonInfo'
        '401':
          description: Unauthorised
  /configurations/identity-providers:
    get:
      tags:
        - Configuration
      summary: Allows a user to get identity provider details
      description: "Sample request:\r\n            \r\n    GET configurations/identity-providers"
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/IdentityProviderDetail'
        '401':
          description: Unauthorised
  /configurations/roles:
    get:
      tags:
        - Configuration
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'
            text/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganisationRole'

  /users:
    post:
      tags:
        - User
      summary: Allows a user to create user details
      description: "Sample request:\r\n            \r\n    POST /users\r\n    {\r\n       \"firstName\": \"FirstName\",\r\n       \"lastName\": \"LastName\",\r\n       \"organisationId\": \"CcsOrgId1\",\r\n       \"groupIds\": { 1, 2},\r\n       \"identityProviderId\": 1,\r\n       \"detail\": {\r\n          \"userName\": \"user@mail.com\",\r\n          \"id\": 0\r\n       }\r\n    }"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID, INVALID_FIRST_NAME, INVALID_LAST_NAME, INVALID_USER_GROUP_ROLE, INVALID_USER_GROUP, INVALID_ROLE, INVALID_IDENTITY_PROVIDER"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    get:
      tags:
        - User
      summary: Allows a user to retrieve details for a given user
      description: "Sample request:\r\n            \r\n    GET /users?userId=user@mail.com"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfileResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfileResponseInfo'
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    put:
      tags:
        - User
      summary: Allows a user to update user details
      description: "Sample request:\r\n            \r\n    PUT /users?userId=user@mail.com\r\n    {\r\n       \"firstName\": \"FirstName\",\r\n       \"lastName\": \"LastName\",\r\n       \"organisationId\": \"CcsOrgId1\",\r\n       \"groupIds\": { 1, 2},\r\n       \"identityProviderId\": 1,\r\n       \"detail\": {\r\n          \"userName\": \"user@mail.com\",\r\n          \"id\": 1\r\n       }\r\n    }"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID, INVALID_FIRST_NAME, INVALID_LAST_NAME, INVALID_USER_GROUP_ROLE, INVALID_USER_GROUP, INVALID_ROLE, INVALID_IDENTITY_PROVIDER, ERROR_CANNOT_REMOVE_ADMIN_ROLE_OR_GROUP_OF_LAST_ADMIN"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    delete:
      tags:
        - User
      summary: Delete a user
      description: "Sample request:\r\n            \r\n    DELETE /users?userId=user@mail.com"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID, ERROR_CANNOT_DELETE_LAST_ADMIN_OF_ORGANISATION"
        '401':
          description: Unauthorised
        '404':
          description: Not found
  /users/UpdateUserRoles:
    put:
      tags:
        - User
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
  /users/AddAdminRole:
    put:
      tags:
        - User
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfileEditRequestInfo'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserEditResponseInfo'
  /users/contact:
    post:
      tags:
        - User contact
      summary: Allows a user to create user contact details
      description: "Sample request:\r\n            \r\n    POST /users/contact?userId=user@mail.com\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok. Return created contact id
          content:
            text/plain:
              schema:
                type: integer
                format: int32
            application/json:
              schema:
                type: integer
                format: int32
            text/json:
              schema:
                type: integer
                format: int32
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID, INSUFFICIENT_DETAILS, INVALID_EMAIL, INVALID_PHONE_NUMBER"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    get:
      tags:
        - User contact
      summary: Allows a user to get user contact details
      description: "Sample request:\r\n            \r\n    GET /user-profile/users/contact?userId=user@mail.com"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
        - name: contactType
          in: query
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserContactInfoList'
            application/json:
              schema:
                $ref: '#/components/schemas/UserContactInfoList'
            text/json:
              schema:
                $ref: '#/components/schemas/UserContactInfoList'
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID"
        '401':
          description: Unauthorised
        '404':
          description: Not found
  '/users/contact/{contactId}':
    get:
      tags:
        - User contact
      summary: Allows a user to retrieve details for a given contact
      description: "Sample request:\r\n            \r\n    GET /users/contact/1?userId=user@mail.com"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserContactInfo'
            application/json:
              schema:
                $ref: '#/components/schemas/UserContactInfo'
            text/json:
              schema:
                $ref: '#/components/schemas/UserContactInfo'
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    put:
      tags:
        - User contact
      summary: Allows a user to edit user contact details
      description: "Sample request:\r\n            \r\n    PUT /users/contact/1?userId=user@mail.com\r\n    {\r\n       \"contactReason\": \"BILLING/SHIPPING\",\r\n       \"name\": \"Test User\",\r\n       \"email\": \"testuser@mail.com\",\r\n       \"phoneNumber\": \"+551155256325\",\r\n       \"fax\": \"9123453\",\r\n       \"webUrl\": \"testuser.com\"\r\n    }"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          text/json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
          application/*+json:
            schema:
              $ref: '#/components/schemas/ContactInfo'
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID, INSUFFICIENT_DETAILS, INVALID_EMAIL, INVALID_PHONE_NUMBER"
        '401':
          description: Unauthorised
        '404':
          description: Not found
    delete:
      tags:
        - User contact
      summary: Remove a contact from user
      description: "Sample request:\r\n            \r\n    DELETE /users/contact/1?userId=user@mail.com"
      parameters:
        - name: userId
          in: query
          schema:
            type: string
            nullable: true
        - name: contactId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Ok
        '400':
          description: "Bad request.\r\n             Error Codes: INVALID_USER_ID"
        '401':
          description: Unauthorised
        '404':
          description: Not found
components:
  schemas:
    ContactReasonInfo:
      type: object
      properties:
        key:
          type: string
          nullable: true
        value:
          type: string
          nullable: true
      additionalProperties: false
    IdentityProviderDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        connectionName:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    RoleEligibleOrgType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    RoleEligibleSubscriptionType:
      enum:
        - 0
        - 1
      type: integer
      format: int32
    RoleEligibleTradeType:
      enum:
        - 0
        - 1
        - 2
      type: integer
      format: int32
    OrganisationRole:
      type: object
      properties:
        roleId:
          type: integer
          format: int32
        roleName:
          type: string
          nullable: true
        orgTypeEligibility:
          $ref: '#/components/schemas/RoleEligibleOrgType'
        subscriptionTypeEligibility:
          $ref: '#/components/schemas/RoleEligibleSubscriptionType'
        tradeEligibility:
          $ref: '#/components/schemas/RoleEligibleTradeType'
      additionalProperties: false
    OrganisationIdentifier:
      type: object
      properties:
        id:
          type: string
          nullable: true
        legalName:
          type: string
          nullable: true
        uri:
          type: string
          nullable: true
        scheme:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationAddress:
      type: object
      properties:
        streetAddress:
          type: string
          nullable: true
        locality:
          type: string
          nullable: true
        region:
          type: string
          nullable: true
        postalCode:
          type: string
          nullable: true
        countryCode:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationDetail:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        creationDate:
          type: string
          nullable: true
        companyType:
          type: string
          nullable: true
        isSme:
          type: boolean
        isVcse:
          type: boolean
        rightToBuy:
          type: boolean
        isActive:
          type: boolean
      additionalProperties: false
    OrganisationProfileInfo:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/OrganisationIdentifier'
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        detail:
          $ref: '#/components/schemas/OrganisationDetail'
      additionalProperties: false
    OrganisationProfileResponseInfo:
      type: object
      properties:
        identifier:
          $ref: '#/components/schemas/OrganisationIdentifier'
        additionalIdentifiers:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationIdentifier'
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        detail:
          $ref: '#/components/schemas/OrganisationDetail'
      additionalProperties: false
    ContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
      additionalProperties: false
    ContactResponseInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
      additionalProperties: false
    OrganisationContactInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        contactsList:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    OrganisationContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationSiteInfo:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
      additionalProperties: false
    SiteDetail:
      type: object
      properties:
        siteId:
          type: integer
          format: int32
      additionalProperties: false
    OrganisationSite:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        details:
          $ref: '#/components/schemas/SiteDetail'
      additionalProperties: false
    OrganisationSiteInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        sites:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationSite'
          nullable: true
      additionalProperties: false
    OrganisationSiteResponse:
      type: object
      properties:
        siteName:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/OrganisationAddress'
        details:
          $ref: '#/components/schemas/SiteDetail'
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationSiteContactInfoList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        siteId:
          type: integer
          format: int32
        siteContacts:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    OrganisationSiteContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        siteId:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
    UserListInfo:
      type: object
      properties:
        name:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserListResponse:
      type: object
      properties:
        currentPage:
          type: integer
          format: int32
        pageCount:
          type: integer
          format: int32
        rowCount:
          type: integer
          format: int32
        organisationId:
          type: string
          nullable: true
        userList:
          type: array
          items:
            $ref: '#/components/schemas/UserListInfo'
          nullable: true
      additionalProperties: false
    OrganisationGroupNameInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        groupId:
          type: integer
          format: int32
        createdDate:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupList:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        groupList:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationGroupInfo'
          nullable: true
      additionalProperties: false
    GroupRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      additionalProperties: false
    GroupUser:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupResponseInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        groupId:
          type: integer
          format: int32
        createdDate:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        roles:
          type: array
          items:
            $ref: '#/components/schemas/GroupRole'
          nullable: true
        users:
          type: array
          items:
            $ref: '#/components/schemas/GroupUser'
          nullable: true
      additionalProperties: false
    OrganisationGroupRolePatchInfo:
      type: object
      properties:
        addedRoleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        removedRoleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
      additionalProperties: false
    OrganisationGroupUserPatchInfo:
      type: object
      properties:
        addedUserIds:
          type: array
          items:
            type: string
          nullable: true
        removedUserIds:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    OrganisationGroupRequestInfo:
      type: object
      properties:
        groupName:
          type: string
          nullable: true
        roleInfo:
          $ref: '#/components/schemas/OrganisationGroupRolePatchInfo'
        userInfo:
          $ref: '#/components/schemas/OrganisationGroupUserPatchInfo'
      additionalProperties: false
    OrganisationRoleUpdate:
      type: object
      properties:
        isBuyer:
          type: boolean
        rolesToAdd:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationRole'
          nullable: true
        rolesToDelete:
          type: array
          items:
            $ref: '#/components/schemas/OrganisationRole'
          nullable: true
      additionalProperties: false
    UserTitle:
      enum:
        - 0
        - 1
        - 2
        - 3
        - 4
      type: integer
      format: int32
    UserDetail:
      type: object
      properties:
        id:
          type: integer
          format: int32
        userName:
          type: string
          nullable: true
      additionalProperties: false
    UserProfileEditRequestInfo:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        title:
          $ref: '#/components/schemas/UserTitle'
        groupIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        roleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        identityProviderId:
          type: integer
          format: int32
        detail:
          $ref: '#/components/schemas/UserDetail'
      additionalProperties: false
    UserEditResponseInfo:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        isRegisteredInIdam:
          type: boolean
      additionalProperties: false
    GroupAccessRole:
      type: object
      properties:
        groupId:
          type: integer
          format: int32
        accessRole:
          type: string
          nullable: true
        accessRoleName:
          type: string
          nullable: true
        group:
          type: string
          nullable: true
      additionalProperties: false
    UserProfileResponseInfo:
      type: object
      properties:
        organisationId:
          type: string
          nullable: true
        firstName:
          type: string
          nullable: true
        lastName:
          type: string
          nullable: true
        title:
          $ref: '#/components/schemas/UserTitle'
        groupIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        roleIds:
          type: array
          items:
            type: integer
            format: int32
          nullable: true
        identityProviderId:
          type: integer
          format: int32
        detail:
          $ref: '#/components/schemas/UserDetail'
        identityProvider:
          type: string
          nullable: true
        identityProviderDisplayName:
          type: string
          nullable: true
        userGroups:
          type: array
          items:
            $ref: '#/components/schemas/GroupAccessRole'
          nullable: true
        canChangePassword:
          type: boolean
        roleNames:
          type: array
          items:
            type: string
          nullable: true
      additionalProperties: false
    UserContactInfoList:
      type: object
      properties:
        userId:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
        contactsList:
          type: array
          items:
            $ref: '#/components/schemas/ContactResponseInfo'
          nullable: true
      additionalProperties: false
    UserContactInfo:
      type: object
      properties:
        contactReason:
          type: string
          nullable: true
        name:
          type: string
          nullable: true
        email:
          type: string
          nullable: true
        phoneNumber:
          type: string
          nullable: true
        fax:
          type: string
          nullable: true
        webUrl:
          type: string
          nullable: true
        contactId:
          type: integer
          format: int32
        userId:
          type: string
          nullable: true
        organisationId:
          type: string
          nullable: true
      additionalProperties: false
#  securitySchemes:
#    ApiKey:
#      type: apiKey
#      name: X-API-KEY
#      in: header
security:
  - ApiKey: []
  
    securitySchemes:
    openID:
      type: openIdConnect
      openIdConnectUrl: 'https://accounts.google.com/.well-known/openid-configuration'
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: 'https://accounts.google.com/o/oauth2/v2/auth'
          tokenUrl: 'https://oauth2.googleapis.com/token'
          scopes:
            openid: Standard scope
            email: email
            profile: profile
            supplier: Grants access to act as a supplier
            buyer: Grants access to act as a buyer
            admin: Grants access to admin operations